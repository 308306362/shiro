<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
  - Application context definition global to all servlet configurations.
  -->
<beans>

    <!-- =========================================================
      -  JSecurity configuration
      ============================================================ -->
    <!-- Enable JSecurity post processor that automatically invokes init() and destroy() methods -->
    <bean class="org.jsecurity.spring.SecurityBeanPostProcessor"/>

    <!-- Access authentication and authorization info for a single data source - called a 'Realm': -->
<!--    <bean id="realm" class="org.jsecurity.realm.support.memory.MemoryRealm">
        <property name="credentialMatcher">
            <bean class="org.jsecurity.authc.credential.commonsdigest.ShaCredentialMatcher">
                <property name="base64Encoded" value="true"/>
            </bean>
        </property>
        <property name="accounts">
            <set>
                <bean class="org.jsecurity.realm.support.memory.AccountEntry">
                    <property name="username" value="user1"/>
                    <property name="password" value="s9qne0wEqVUbh4HQMZH+CY8yXmc="/> --><!-- 'user1' SHA-1 Base64 --><!--
                    <property name="roles" value="role1, role2"/>
                </bean>
                <bean class="org.jsecurity.realm.support.memory.AccountEntry">
                    <property name="username" value="user2"/>
                    <property name="password" value="oYgcBu7JbbmQHHu/5BxCo/COnLQ="/> --><!-- 'user2' SHA-1 Base64 --><!--
                    <property name="roles" value="role2"/>
                </bean>
            </set>
        </property>
    </bean>-->

    <bean id="realm" class="org.jsecurity.realm.support.jdbc.JdbcRealm">
        <property name="credentialMatcher">
            <bean class="org.jsecurity.authc.credential.commonsdigest.ShaCredentialMatcher">
                <property name="base64Encoded" value="true"/>
            </bean>
        </property>
        <property name="dataSource">
            <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource">
                <property name="url" value="jdbc:hsqldb:mem:jsecurity-spring"/>
                <property name="username" value="sa"/>
            </bean>
        </property>
    </bean>

    <!-- JSecurity's main business-tier object:  -->
    <bean id="securityManager" class="org.jsecurity.DefaultSecurityManager">
        <property name="realms">
            <list>
                <ref bean="realm"/>
            </list>
        </property>
    </bean>


    <!-- Enable JSecurity Annotations for Spring-configured beans: -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
    <bean class="org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="authorizer" ref="securityManager"/>
    </bean>


    <!-- Ensure any Spring-based remote method invocations can be associated with a SecurityContext and a Session -->
    <bean id="secureRemoteInvocationExecutor" class="org.jsecurity.spring.remoting.SecureRemoteInvocationExecutor">
        <property name="securityManager" ref="securityManager"/>
    </bean>


    <!-- Web Interceptors -->
    <bean id="securityContextInterceptor" class="org.jsecurity.spring.servlet.security.SecurityContextInterceptor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean id="authenticationInterceptor" class="org.jsecurity.spring.servlet.security.AuthenticationInterceptor">
        <property name="contextRelative" value="true"/>
        <property name="loginURL" value="/s/login"/>
    </bean>

    <bean id="sessionInterceptor" class="org.jsecurity.spring.servlet.security.SessionInterceptor">
        <property name="sessionFactory" ref="securityManager"/>
    </bean>


    <!-- Sample application-level business Managers -->
    <bean id="sampleManager" class="org.jsecurity.samples.spring.DefaultSampleManager"/>

</beans>
